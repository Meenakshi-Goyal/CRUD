[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\m158\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\m158\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Eclipse Foundation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 182.1215ms
[debug]       Load.loadUnit: defsScala took 0.438ms
[debug] [Loading] Scanning directory C:\Users\m158\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\m158\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.6511 ms
[debug]           Load.resolveProject(global-plugins) took 65.9022ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\m158\.sbt\1.0\plugins, plugins: List(<none>))) took 128.945ms
[debug] [Loading] Done in C:\Users\m158\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 164.354ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3675ms
[debug]     Load.loadUnit(file:/C:/Users/m158/.sbt/1.0/plugins/, ...) took 361.53ms
[debug]   Load.apply: load took 573.6166ms
[debug]   Load.apply: resolveProjects took 7.1628ms
[debug]   Load.apply: finalTransforms took 82.1206ms
[debug]   Load.apply: config.delegates took 13.9283ms
[debug]   Load.apply: Def.make(settings)... took 662.4043ms
[debug]   Load.apply: structureIndex took 156.0978ms
[debug]   Load.apply: mkStreams took 2.4138ms
[info] loading global plugins from C:\Users\m158\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8307.2757ms
[debug]           Load.loadUnit: plugins took 26.7029ms
[debug]           Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Users\m158\IdeaProjects\CRUD\project
[debug]             Load.loadUnit: mkEval took 10.5062ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\m158\IdeaProjects\CRUD\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.4052 ms
[info] loading settings for project crud-build from idea.sbt ...
[debug]               Load.resolveProject(crud-build) took 4.3066ms
[debug]             Load.loadTransitive: finalizeProject(Project(id crud-build, base: C:\Users\m158\IdeaProjects\CRUD\project, plugins: List(<none>))) took 10.6425ms
[debug] [Loading] Done in C:\Users\m158\IdeaProjects\CRUD\project, returning: (crud-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3266.2891ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.9547ms
[debug]         Load.loadUnit(file:/C:/Users/m158/IdeaProjects/CRUD/project/, ...) took 3300.2818ms
[debug]       Load.apply: load took 3303.9763ms
[debug]       Load.apply: resolveProjects took 0.2322ms
[debug]       Load.apply: finalTransforms took 11.624ms
[debug]       Load.apply: config.delegates took 0.5594ms
[debug]       Load.apply: Def.make(settings)... took 156.6466ms
[debug]       Load.apply: structureIndex took 47.8355ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\m158\IdeaProjects\CRUD\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 8355.4283ms
[debug]     Load.loadUnit: defsScala took 0.0097ms
[debug] [Loading] Scanning directory C:\Users\m158\IdeaProjects\CRUD
[debug]       Load.loadUnit: mkEval took 0.3043ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1427 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 55.4546ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\m158\IdeaProjects\CRUD, plugins: List(<none>))) took 62.0597ms
[debug] [Loading] Done in C:\Users\m158\IdeaProjects\CRUD, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2926.5092ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.4548ms
[debug]   Load.loadUnit(file:/C:/Users/m158/IdeaProjects/CRUD/, ...) took 11302.7456ms
[debug] Load.apply: load took 11304.9421ms
[debug] Load.apply: resolveProjects took 0.1699ms
[debug] Load.apply: finalTransforms took 40.3066ms
[debug] Load.apply: config.delegates took 0.6766ms
[debug] Load.apply: Def.make(settings)... took 106.4889ms
[debug] Load.apply: structureIndex took 40.6738ms
[debug] Load.apply: mkStreams took 0.0059ms
[info] set current project to CRUD (in build file:/C:/Users/m158/IdeaProjects/CRUD/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49970 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49970, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CRUD (in build file:/C:/Users/m158/IdeaProjects/CRUD/)
[debug] > Exec(idea-shell, None, None)
